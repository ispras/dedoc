ARG REPOSITORY="docker.io"
FROM ubuntu:bionic-20210118

RUN apt-get update && \
    apt-get install -y curl wget git vim clang python3 python3-pip \
    build-essential gcc-multilib g++-multilib unzip

RUN wget https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-linux.zip \
    && unzip ninja-linux.zip && mv ninja /usr/bin && rm ninja-linux.zip

RUN curl -L -O https://github.com/Kitware/CMake/releases/download/v3.22.1/cmake-3.22.1-linux-x86_64.sh && \
    mkdir /cmake && \
    bash cmake-3.22.1-linux-x86_64.sh --prefix=/cmake --exclude-subdir --skip-license && \
    ln -s /cmake/bin/cmake /bin/cmake && \
    rm cmake-3.22.1-linux-x86_64.sh

# Clone target from GitHub.
RUN pip3 install --upgrade pip && \
    pip3 install scikit-build astunparse numpy ninja pyyaml mkl mkl-include setuptools cmake cffi typing_extensions && \
    git clone https://timon.intra.ispras.ru/mirrors/pytorch pytorch && cd /pytorch && \
    git checkout secure-v1.11.0 && \
    git submodule update --init --recursive --jobs 0

WORKDIR /
RUN curl https://repo.anaconda.com/archive/Anaconda3-2022.10-Linux-x86_64.sh --output anaconda.sh
RUN bash anaconda.sh -b -p /anaconda3
ENV PATH=/anaconda3/bin:$PATH
RUN conda init bash
RUN bash

RUN conda install astunparse numpy ninja pyyaml setuptools cmake cffi typing_extensions future six requests dataclasses mkl mkl-include

WORKDIR /pytorch
ENV CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"}
RUN python3 setup.py build
RUN python3 setup.py bdist_wheel
RUN pip3 install dist/torch-1.11.0a0+git1911a63-cp39-cp39-linux_x86_64.whl

WORKDIR /
RUN git clone https://github.com/pytorch/vision.git torchvision && cd /torchvision && \
    git checkout v0.12.0
WORKDIR /torchvision
RUN python3 setup.py build
RUN python3 setup.py bdist_wheel
RUN pip3 install dist/torchvision-0.12.0a0+9b5a3fe-cp39-cp39-linux_x86_64.whl

# Run example
WORKDIR /
COPY test.py /
RUN python3 test.py
CMD ["sleep", "6000"]